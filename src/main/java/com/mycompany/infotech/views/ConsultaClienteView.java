/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.infotech.views;

import com.mycompany.infotech.controller.ClienteController;
import com.mycompany.infotech.models.Cliente;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Icaro
 */
public class ConsultaClienteView extends javax.swing.JFrame {

    /**
     * Creates new form View_ConsultaClinente
     */
    public ConsultaClienteView() {
        initComponents();
        setTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_cliente = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txt_pesquisa = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        cmb_coluna = new javax.swing.JComboBox<>();
        btn_busca = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        btn_Adicionar = new javax.swing.JButton();
        btn_Atualizar = new javax.swing.JButton();
        btn_atualizartabela = new javax.swing.JButton();
        btn_Excluir1 = new javax.swing.JButton();
        btn_pedido = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Consulta de Cliente");

        tbl_cliente.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tbl_cliente);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel1.setText("Consulta por");

        jLabel2.setText("Na Coluna");

        cmb_coluna.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ID", "Nome", "Sexo", "CPF", "Cidade", "Estado", "Endereso" }));

        btn_busca.setText("Buscar");
        btn_busca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_buscaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(txt_pesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(cmb_coluna, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btn_busca)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txt_pesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(cmb_coluna, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_busca))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        btn_Adicionar.setText("Adicionar");
        btn_Adicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_AdicionarActionPerformed(evt);
            }
        });

        btn_Atualizar.setText("Atualizar");
        btn_Atualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_AtualizarActionPerformed(evt);
            }
        });

        btn_atualizartabela.setText("Atualizar tabela");
        btn_atualizartabela.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_atualizartabelaActionPerformed(evt);
            }
        });

        btn_Excluir1.setForeground(new java.awt.Color(204, 0, 0));
        btn_Excluir1.setText("Excluir");
        btn_Excluir1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_Excluir1ActionPerformed(evt);
            }
        });

        btn_pedido.setText("Novo Pedido");
        btn_pedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_pedidoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(btn_Adicionar)
                .addGap(18, 18, 18)
                .addComponent(btn_Atualizar)
                .addGap(18, 18, 18)
                .addComponent(btn_pedido)
                .addGap(18, 18, 18)
                .addComponent(btn_atualizartabela)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btn_Excluir1)
                .addGap(18, 18, 18))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_Adicionar)
                    .addComponent(btn_Atualizar)
                    .addComponent(btn_atualizartabela)
                    .addComponent(btn_Excluir1)
                    .addComponent(btn_pedido))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 395, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(16, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btn_buscaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_buscaActionPerformed
        Busca();
    }//GEN-LAST:event_btn_buscaActionPerformed

    private void btn_AdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_AdicionarActionPerformed
        add();
    }//GEN-LAST:event_btn_AdicionarActionPerformed

    private void btn_atualizartabelaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_atualizartabelaActionPerformed
       setTable();
    }//GEN-LAST:event_btn_atualizartabelaActionPerformed

    private void btn_AtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_AtualizarActionPerformed
        Atualizar();
    }//GEN-LAST:event_btn_AtualizarActionPerformed

    private void btn_Excluir1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_Excluir1ActionPerformed
        exclusao();
    }//GEN-LAST:event_btn_Excluir1ActionPerformed

    private void btn_pedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_pedidoActionPerformed
        System.out.println("item selecionado na tabela cliente "+tbl_cliente.getSelectedRow()+1);
        if (tbl_cliente.getSelectedRow()>=0){
            
            Cliente c = new Cliente();
            int nulinha = tbl_cliente.getSelectedRow();
            int er =0;
            
            try{
                
                c.setID(Integer.parseInt(tbl_cliente.getModel().getValueAt(nulinha, 0).toString()));
                er++;
                c.setNome(tbl_cliente.getModel().getValueAt(nulinha, 1).toString());
                er++;
                
                TelaVendasView tela = new TelaVendasView(c);
                tela.setVisible(true);
                
                ConsultaClienteView.this.dispose();
                
            }catch (NumberFormatException ex){
                JOptionPane.showMessageDialog(this, "Erro "+er+"\n"+ex);
                System.out.println("Erro "+er+" de conversão");
            }catch (Exception ex){
                JOptionPane.showMessageDialog(this, "Erro "+er+"\n"+ex);
                System.out.println("Erro "+er+" de conversão");
            } 
        }else{
            JOptionPane.showMessageDialog(this, "selecione um cliente");
        }
    }//GEN-LAST:event_btn_pedidoActionPerformed
    
    /**
     * função para excluir um cliente
     */
    public void exclusao(){
        if(tbl_cliente.getSelectedRow()>=0){
            int nulinha = tbl_cliente.getSelectedRow();
            
            int proceed = JOptionPane.showConfirmDialog(this,"Tem certeza que deseja excluir o cadastro do cliente "+tbl_cliente.getModel().getValueAt(nulinha, 1).toString()+"?" ,"Excluir",JOptionPane.YES_NO_OPTION);
            
            if (proceed == JOptionPane.YES_OPTION) {
                
                if (ClienteController.exclusao(Integer.parseInt(tbl_cliente.getModel().getValueAt(nulinha, 0).toString()))) {
                    JOptionPane.showMessageDialog(this, "Cliente excluído");
                }else{
                    JOptionPane.showMessageDialog(this, "Erro ao excluir Cliente");
                }
                
                setTable();
                
            }else{
                JOptionPane.showMessageDialog(this, "Exclusão Cancelada");
            }
        }else{
            JOptionPane.showMessageDialog(this, "Selecione um Cliente");
        }
    }
    
    /**
     * função para chamar a tela de alteração dos dados do cliente
     */
    public void Atualizar(){
        System.out.println("item selecionado na tabela cliente "+tbl_cliente.getSelectedRow()+1);
        if (tbl_cliente.getSelectedRow()>=0) {
            
            Cliente c = new Cliente();
            int nulinha = tbl_cliente.getSelectedRow();
            int er =0;
            
            SimpleDateFormat formato = new SimpleDateFormat("dd/MM/yyyy");
            
            try{
                
                c.setID(Integer.parseInt(tbl_cliente.getModel().getValueAt(nulinha, 0).toString()));
                er++;
                c.setNome(tbl_cliente.getModel().getValueAt(nulinha, 1).toString());
                er++;
                c.setDatanaci(formato.parse(tbl_cliente.getModel().getValueAt(nulinha, 2).toString()));
                er++;
                c.setSexo(tbl_cliente.getModel().getValueAt(nulinha, 3).toString());
                er++;
                c.setEmail(tbl_cliente.getModel().getValueAt(nulinha, 4).toString());
                er++;
                c.setCPF(tbl_cliente.getModel().getValueAt(nulinha, 5).toString());
                er++;
                c.setCidade(tbl_cliente.getModel().getValueAt(nulinha, 6).toString());
                er++;
                c.setEstado(tbl_cliente.getModel().getValueAt(nulinha, 7).toString());
                er++;
                c.setEndereco(tbl_cliente.getModel().getValueAt(nulinha, 8).toString());
                er++;
                
                
                CadastroClienteView tela = new CadastroClienteView(c);
                tela.setVisible(true);
                
                ConsultaClienteView.this.dispose();
                
            }catch (NumberFormatException ex){
                JOptionPane.showMessageDialog(this, "Erro "+er+"\n"+ex);
                System.out.println("Erro "+er+" de conversão");
            }catch (Exception ex){
                JOptionPane.showMessageDialog(this, "Erro "+er+"\n"+ex);
                System.out.println("Erro "+er+" de conversão");
            } 
        }else{
            JOptionPane.showMessageDialog(this, "selecione um cliente");
        }
    }
    
    /**
     * função para chamar a tela de cadastro de cliente
     */
    public void add(){
        CadastroClienteView tela = new CadastroClienteView();
        tela.setVisible(true);
        
        ConsultaClienteView.this.dispose();
    }
    
    /**
     * função para buscar um elemento em determinada colunada da tabela clientes
     */
    public void Busca(){
        if (camos(cmb_coluna.getSelectedIndex(), txt_pesquisa.getText())) {
            
            ArrayList<String[]> listaCliente = ClienteController.Busca((String) cmb_coluna.getSelectedItem(), txt_pesquisa.getText());
        
            DefaultTableModel tmclientes = new DefaultTableModel();

            tmclientes.addColumn("ID");
            tmclientes.addColumn("Nome");
            tmclientes.addColumn("Data de nascimento");
            tmclientes.addColumn("Sexo");
            tmclientes.addColumn("Email");
            tmclientes.addColumn("CPF");
            tmclientes.addColumn("Cidade");
            tmclientes.addColumn("Estado");
            tmclientes.addColumn("Esdereso");

            tbl_cliente.setModel(tmclientes);

            tmclientes.setRowCount(0);
            if (listaCliente.size()>0) {
                System.out.println("itens retornados "+listaCliente.size());
                for (String[] c : listaCliente){
                tmclientes.addRow(c);
                }
            }else{
                System.out.println("não foi encontrado nenhum registro");
                JOptionPane.showMessageDialog(this, "não foi encontrado nenhum registro");
            }
            

            tbl_cliente.getColumnModel().getColumn(0).setPreferredWidth(20);
            tbl_cliente.getColumnModel().getColumn(1).setPreferredWidth(150);
            tbl_cliente.getColumnModel().getColumn(2).setPreferredWidth(50);
            tbl_cliente.getColumnModel().getColumn(3).setPreferredWidth(20);
            tbl_cliente.getColumnModel().getColumn(4).setPreferredWidth(150);
            tbl_cliente.getColumnModel().getColumn(5).setPreferredWidth(25);
            tbl_cliente.getColumnModel().getColumn(6).setPreferredWidth(50);
            tbl_cliente.getColumnModel().getColumn(7).setPreferredWidth(50);
        
        }
    }
    
    /**
     * função para validar os campos
     * @param text String a ser validada
     * @param item int identifique o tipo de validar
     * @return boolean retornar <b>true</b> se o campo de acordo. se não retorna <b>false</b>
     */
    public boolean camos(int item, String text){
        try {          
            //0 ID,1 Nome,2 data,3 Sexo,4 CPF,5 Cidade,6 Estado,7 Endereso
            int n;
            if (text.trim().trim().equals("")) {
                JOptionPane.showMessageDialog(null, "preencha o campo");
                return false;
            }else{
                switch(item){
                    case 0:
                        n = Integer.parseInt(text);
                    break;
                    case 1:
                        if (40 >= text.length()){
                            return true;
                        }else{
                            JOptionPane.showMessageDialog(null, "O Nome excedeu o tamanho do campo");
                            return false;
                        }
                    case 3:
                        if ("f".equals(text) || "m".equals(text) || "F".equals(text) || "M".equals(text)) {
                            return true;
                        }else{
                            JOptionPane.showMessageDialog(null, "sexo invalido");
                            return false;
                        }
                    case 4:
                        if (11 >= text.length()) {
                            n = Integer.parseInt(text);
                            return true;
                        }else{
                            JOptionPane.showMessageDialog(null, "excedeu o tamanho do CPF");
                            return false;
                        }
                    case 5:
                        if (20 >= text.length()) {
                            return true;
                        }else{
                            JOptionPane.showMessageDialog(null, "A Cidade excedeu o tamanho do campo");
                            return false;
                        }
                    case 6:
                        if (2 == text.length()) {
                            return true;
                        }else{
                            JOptionPane.showMessageDialog(null, "Estado: tamanho o invalido");
                            return false;
                        }
                    case 7:
                        if (40 >= text.length()) {
                            return true;
                        }else{
                            JOptionPane.showMessageDialog(null, "O Endereso excedeu o tamanho do campo");
                            return false;
                        }
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, cmb_coluna.getSelectedItem()+" não pode ser convertido");
            return false;
        }
        return true;
    }
    
    /**
     * função para Popular a tabela cliente
     */
    public void setTable(){
        
        ArrayList<String[]> listaCliente = ClienteController.setClientes();
        
        DefaultTableModel tmclientes = new DefaultTableModel();
        
        tmclientes.addColumn("ID");
        tmclientes.addColumn("Nome");
        tmclientes.addColumn("Data de nascimento");
        tmclientes.addColumn("Sexo");
        tmclientes.addColumn("Email");
        tmclientes.addColumn("CPF");
        tmclientes.addColumn("Cidade");
        tmclientes.addColumn("Estado");
        tmclientes.addColumn("Esdereso");
        
        tbl_cliente.setModel(tmclientes);
        
        tmclientes.setRowCount(0);
        
        for (String[] c : listaCliente){
            tmclientes.addRow(c);
        }
        
        tbl_cliente.getColumnModel().getColumn(0).setPreferredWidth(20);
        tbl_cliente.getColumnModel().getColumn(1).setPreferredWidth(150);
        tbl_cliente.getColumnModel().getColumn(2).setPreferredWidth(50);
        tbl_cliente.getColumnModel().getColumn(3).setPreferredWidth(20);
        tbl_cliente.getColumnModel().getColumn(4).setPreferredWidth(100);
        tbl_cliente.getColumnModel().getColumn(5).setPreferredWidth(50);
        tbl_cliente.getColumnModel().getColumn(6).setPreferredWidth(50);
        tbl_cliente.getColumnModel().getColumn(7).setPreferredWidth(50);
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ConsultaClienteView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ConsultaClienteView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ConsultaClienteView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ConsultaClienteView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ConsultaClienteView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_Adicionar;
    private javax.swing.JButton btn_Atualizar;
    private javax.swing.JButton btn_Excluir1;
    private javax.swing.JButton btn_atualizartabela;
    private javax.swing.JButton btn_busca;
    private javax.swing.JButton btn_pedido;
    private javax.swing.JComboBox<String> cmb_coluna;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbl_cliente;
    private javax.swing.JTextField txt_pesquisa;
    // End of variables declaration//GEN-END:variables
}
